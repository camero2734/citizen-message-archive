---
import { Image } from 'astro:assets';
import { images } from '../helpers/images';
import { format } from 'date-fns/format';

export interface Props {
	date: Date;
	text: string;
	clue: string;
	number: string;
	location: string;
}

const { text, date, clue, number, location } = Astro.props;

const image = images[`../images/${number}.png`] || images[`../images/${number}.jpg`];
if (!image) {
	throw new Error(`Image not found for clue ${number}`);
}

const formattedDate = format(date, "'0'yy MM'MOON' dd");
const normalDate = format(date, "dd MMMM yyyy");

interface TextPiece {
	type: "p" | "span" | "br";
	text: string;
}

let textPieces: TextPiece[] = [];
text.split('\n').forEach((line) => {
	const split = line.split(/([A-Z])\1{1}/);

	for (const piece of split) {
		if (piece.length === 1) {
			textPieces.push({
				type: "span",
				text: piece,
			});
		} else if (piece) {
			textPieces.push({
				type: "p",
				text: piece,
			});
		}
	}

	textPieces.push({
		type: "br",
		text: "",
	});
});

---

<li class="link-card" id={number}>
	<!-- <h2 class="gradient-number">{number}</h2> -->
	<header>
		<p class="date" title={normalDate}>{formattedDate}</p>
		<p>-</p>
		<p class="clue-s"><span class="clue">{clue}</span></span></p>
	</header>
	<p class="location">{location}</p>
	<figure class="image-container">
		<Image class="image" src={image()} alt={text} />
		<figcaption class="image-number gradient-number">{number}</figcaption>
	</figure>
	<div class="text">
		{textPieces.map((piece) => (
			piece.type === "p"
				? <p>{piece.text}</p>
				: piece.type === "br" 
					? <br />
					: <span class="double">{piece.text}{piece.text}</span>
		))}
	</div>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		flex-direction: column;
		align-items: baseline;;

		padding: 1em;
		padding-inline: 2em;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.image {
		max-width: 100%;
		height: auto;
		margin-bottom: 2em;
	}

	.date {
		font-weight: bold;
		color: white;
		margin-bottom: 1em;

		font-family: 'Courier New', monospace;
	}

	.clue {
		font-weight: bold;
		font-family: 'Courier New', monospace;

		text-shadow: 
				0 0 4px rgb(var(--accent-light)),
				0 0 8px rgb(var(--accent)),
				0 0 12px rgb(var(--accent-dark));
	}

	header {
		font-size: 1em;
		display: flex;
		gap: 1em;
	}

	header p {
		display: block;
		margin-bottom: 0;
	}

	.text {
		font-size: 0.75em;
		font-family: 'Courier New', monospace;
		font-weight: 600;
		padding-left: 1em;

		color: #ccc;

		border: 1px solid rgb(var(--accent-dark));
		border-width: 0 0 0 0.25em;
		border-image: linear-gradient(to bottom, rgb(var(--accent)), rgb(var(--accent-light))) 1;
	}

	.text p {
		display: inline;
		margin-top: 0;
		margin-bottom: 0;
	}

	.location {
		margin: 0;
		font-size: 0.75em;
		opacity: 0.5;
		margin-bottom: 2em;
		font-family: 'Courier New', monospace;
	}

	.gradient-number {
		font-size: 1em;
		font-weight: bold;
		color: white;
		margin-bottom: 0;
		text-shadow: 0 0 5px rgba(0, 0, 0, 1);
		padding: 4px;

		background:
			var(--accent-gradient) rgba(0, 0, 0, 0.9) ;

		background-size: 400%;
		border-radius: 5px;
	}

	.double {
		font-weight: 600;
		color: white;

		/* glowing effect */
		text-shadow: 
            0 0 5px rgb(var(--accent-light)),
            0 0 10px rgb(var(--accent)),
            0 0 15px rgb(var(--accent-dark));
	}

	.image-container {
		position: relative;
		margin: 0;
	}

	.image-number {
		position: absolute;
		left: 10px;
		top: 10px;
	}

	@media (max-width: 500px) {
		.location {
			font-size: 0.6em;
		}
	}

	@media (max-width: 400px) {
		header, .text {
			font-size: 0.75em;
		}
	}
</style>
